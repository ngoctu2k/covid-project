{"version":3,"sources":["components/DetailCountry/index.js","components/FormatNumber/index.js","components/ItemCountry/index.js","components/ListCountry/index.js","api/axiosClient.js","api/covidApi.js","redux/covidSlice.js","components/Search/index.js","components/Statistics/index.js","components/Time/index.js","App.js","reportWebVitals.js","index.js"],"names":["DetailCountry","props","deaths","recovered","className","FormatNumber","number","String","replace","ItemCountry","country","index","active","src","countryInfo","flag","alt","cases","ListCountry","listCountry","key","useSelector","state","covid","VietNam","find","x","listCountryFilter","filter","toLowerCase","indexOf","sort","a","b","tenCountry","slice","map","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","config","response","data","error","covidApi","getAll","get","search","url","getAllAsyncThunk","createAsyncThunk","respon","covidSlice","createSlice","name","initialState","isShowDetailCountry","loading","reducers","searchCountry","action","payload","removePost","splice","extraReducers","pending","fulfilled","console","log","actions","reducer","Search","dispatch","useDispatch","type","placeholder","onChange","e","value","target","Statistics","totalCases","totalDeaths","totalRecovered","Time","useState","currentTime","setCurrentTime","today","Date","year","getFullYear","mounth","getMonth","day","getDay","date","getDate","useEffect","getCrurrentTime","setInterval","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatDate","clearInterval","App","setTotalCases","setTotalDeath","setTotalRecovered","totalCase","totalDeath","forEach","gettotalCases","Update","React","memo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8e8b52f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\nDetailCountry.propTypes = {\r\n    \r\n};\r\n\r\nfunction DetailCountry(props) {\r\n    const{deaths,recovered}=props\r\n    return (\r\n        <div className=\"detail-country\">\r\n            <div>\r\n                <h4>Tử vong :{deaths}</h4>\r\n            </div>\r\n            <div>\r\n                <h4>Bình phục :{recovered}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailCountry;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nfunction FormatNumber(props) {\r\n    const{number} =props\r\n    return    String(number).replace(/(.)(?=(\\d{3})+$)/g, \"$1,\");\r\n    ;\r\n}\r\n\r\nexport default FormatNumber;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\nimport FormatNumber from '../FormatNumber';\r\nItemCountry.propTypes = {\r\n    \r\n};\r\n\r\nfunction ItemCountry(props) {\r\n    const{country,index,active} = props\r\n    return (\r\n        <div className={`item-country ${active?\"active\":\"\"}`}>\r\n            <div className=\"item-country-left\">\r\n                <span className=\"number-index\">{index+1}</span>\r\n                <img className=\"national-flag\" src={country?.countryInfo.flag} alt=\"\"/>\r\n            </div>\r\n            <div className=\"item-country-center\">\r\n                <h3>{country?.country}</h3>\r\n                <p>3 minutes ago </p>\r\n            </div>\r\n            <div className=\"item-country-right\">\r\n                <h4><FormatNumber number={country?.cases}/></h4>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemCountry;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DetailCountry from \"../DetailCountry\";\r\nimport ItemCountry from \"../ItemCountry\";\r\nimport \"./style.css\";\r\nfunction ListCountry(props) {\r\n  const { listCountry } = props;\r\n  const state = useSelector((state) => state.covid);\r\n  const { key } = state;\r\n  const VietNam = listCountry.find((x) => x.country == \"Vietnam\");\r\n  let listCountryFilter = listCountry.filter(\r\n    (x) => x?.country?.toLowerCase().indexOf(key.toLowerCase()) >= 0\r\n  );\r\n  listCountryFilter.sort((a, b) => b.cases - a.cases);\r\n  const tenCountry = key\r\n    ? listCountryFilter.slice(0, 10)\r\n    : listCountryFilter.slice(0, 9);\r\n  return (\r\n    <div className=\"list-country-container\">\r\n      <ul className=\"list-country\">\r\n        {!key && (\r\n          <li>\r\n            <ItemCountry key={VietNam?.country} country={VietNam} index={0} />\r\n          </li>\r\n        )}\r\n        {tenCountry &&\r\n          tenCountry.map((country, index) => {\r\n            return (\r\n              <li  key={country?.country}>\r\n                <ItemCountry\r\n                  key={country?.country}\r\n                  country={country}\r\n                  index={!key ? index + 1 : index}\r\n                  active={key?true:false}\r\n                />\r\n                {key && (\r\n                  <DetailCountry\r\n                    deaths={country.deaths}\r\n                    recovered={country.recovered}\r\n                  />\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListCountry;\r\n","// api/axiosClient.js\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\n// Set up default config for http requests here\r\n\r\n// Please have a look at here `https://github.com/axios/axios#request-config` for the full list of configs\r\n\r\nconst axiosClient = axios.create({\r\nbaseURL: \"https://disease.sh/v3/covid-19/countries\",\r\nheaders: {\r\n'content-type': 'application/json',\r\n},\r\nparamsSerializer: params => queryString.stringify(params),\r\n});\r\naxiosClient.interceptors.request.use(async (config) => {\r\n// Handle token here ...\r\nreturn config;\r\n})\r\naxiosClient.interceptors.response.use((response) => {\r\nif (response && response.data) {\r\nreturn response.data;\r\n}\r\nreturn response;\r\n}, (error) => {\r\n// Handle errors\r\nthrow error;\r\n});\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\n// api/productApi.js\r\nconst covidApi = {\r\n  getAll: () => {\r\n    const url = \"\";\r\n    return axiosClient.get(url);\r\n  },\r\n  search: (country) => {\r\n    const url = `/${country}`;\r\n    return axiosClient.get(url);\r\n  },\r\n};\r\nexport default covidApi;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport covidApi from \"../api/covidApi\";\r\nexport const getAllAsyncThunk = createAsyncThunk(\r\n  \"photo/search\",\r\n  async (params) => {\r\n    const respon = await covidApi.getAll();\r\n    return respon;\r\n  }\r\n);\r\n\r\nconst covidSlice = createSlice({\r\n  name: \"covid\",\r\n  initialState: {\r\n    listCountry: [],\r\n    key: \"\",\r\n    isShowDetailCountry: false,\r\n    loading: true,\r\n  },\r\n  reducers: {\r\n    searchCountry(state, action) {\r\n      state.key = action.payload;\r\n    },\r\n    removePost(state, action) {\r\n      state.splice(action.payload, 1);\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getAllAsyncThunk.pending]: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n    [getAllAsyncThunk.fulfilled]: (state, action) => {\r\n      console.log(\"get all\");\r\n      let ListCountry = action.payload;\r\n\r\n      state.listCountry = ListCountry;\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = covidSlice;\r\nexport const { searchCountry, removePost } = actions;\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { searchCountry } from \"../../redux/covidSlice\";\r\nSearch.propTypes = {};\r\n\r\nfunction Search(props) {\r\n  const dispatch = useDispatch();\r\n  const handleSearch = (e) => {\r\n    const value = e.target.value\r\n    const action = searchCountry(value);\r\n    dispatch(action);\r\n  };\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"button-src\">\r\n        <span><i className=\"fas fa-search\"></i></span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search 667 regions...\"\r\n        onChange={handleSearch}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport FormatNumber from \"../FormatNumber\";\r\nimport './style.css';\r\nStatistics.propTypes = {};\r\n\r\n\r\nfunction Statistics(props) {\r\n   const{totalCases,totalDeaths,totalRecovered} = props\r\n  return ( \r\n    <div className=\"statistics\">\r\n      <h1 className=\"statistics-total\"><FormatNumber number={totalCases}/></h1>\r\n      <div className=\"statistics-detail\">\r\n        <div >\r\n          <h3><FormatNumber number={totalDeaths}/></h3>\r\n          <p>TỬ VONG</p>\r\n        </div>\r\n        <div>\r\n          <h3><FormatNumber number={totalRecovered}/></h3>\r\n          <p>ĐÃ CHỮA KHỎI</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport\"./time.css\"\r\n\r\nTime.propTypes = {};\r\nfunction formatDate(date) {\r\n  const hours = `0${date.getHours()}`.slice(-2);\r\n  const minutes = `0${date.getMinutes()}`.slice(-2);\r\n  const seconds = `0${date.getSeconds()}`.slice(-2);\r\n  return `${hours}:${minutes}:${seconds}`;\r\n}\r\nfunction Time(props) {\r\n  const [currentTime, setCurrentTime] = useState();\r\n  const today = new Date();\r\n  console.log(today);\r\n  const year = today.getFullYear();\r\n  const mounth = today.getMonth();\r\n  const day = today.getDay();\r\n  const date = today.getDate()\r\n  console.log(date);\r\n  useEffect(() => {\r\n    const getCrurrentTime = setInterval(function () {\r\n      const today = new Date();\r\n      setCurrentTime(formatDate(today));\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(getCrurrentTime);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"current-time\">\r\n      <div> {currentTime}</div>\r\n      <div>\r\n        Thứ {day + 1} ngày {date} tháng {mounth + 1} năm {year}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Time;\r\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./assets/styles/reset.css\";\nimport ListCountry from \"./components/ListCountry\";\nimport Search from \"./components/Search\";\nimport Statistics from \"./components/Statistics\";\nimport { getAllAsyncThunk } from \"./redux/covidSlice\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Time from \"./components/Time\";\n\nfunction App() {\n  const state = useSelector((state) => state.covid);\n  const [totalCases, setTotalCases] = useState(0);\n  const [totalDeaths, setTotalDeath] = useState(0);\n  const [totalRecovered, setTotalRecovered] = useState(0);\n  const { listCountry, loading } = state;\n  console.log(1);\n  useEffect(() => {\n    function gettotalCases() {\n      let totalCase = 0;\n      let totalDeath = 0;\n      let recovered = 0;\n      listCountry.forEach((x) => {\n        totalCase += x.cases;\n        totalDeath += x.deaths;\n        recovered += x.recovered;\n      });\n      setTotalCases(totalCase);\n      setTotalDeath(totalDeath);\n      setTotalRecovered(recovered);\n    }\n    gettotalCases();\n  }, [loading]);\n  const dispatch = useDispatch();\n  // useEffect(() => {\n  //   const action = getAllAsyncThunk();\n  //   console.log(\"2k\");\n  // }, []);\n  useEffect(() => {\n    console.log(\"3k\");\n    const action = getAllAsyncThunk();\n    dispatch(action);\n\n    const Update = setInterval(function () {\n      dispatch(action);\n    }, 60000*3);\n    return () => {\n      console.log(\"update\");\n      clearInterval(Update);\n    };\n  }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <Time/>\n          <Statistics\n            totalCases={totalCases}\n            totalDeaths={totalDeaths}\n            totalRecovered={totalRecovered}\n          />\n          <Search />\n          <ListCountry listCountry={listCountry} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport covidSlice from \"./redux/covidSlice\";\nimport { Provider } from \"react-redux\";\nconst store = configureStore({\n  reducer: {\n    covid: covidSlice,\n  },\n});\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}